
Declare Sub load()
Declare sub save()
Declare Sub bank_save(mem As Byte Ptr , bn As Byte Ptr , bank As Integer) 
Declare Sub bank_load(mem As Byte Ptr , bn As Byte Ptr , bank As Integer) 
Declare Sub bank_switch(bank As Integer) 
Declare Sub emulate() 
Declare Function rstkpop() As Long 
Declare Sub rstkpush(d As Long) 
Declare Function nibble_ptr(d As Long) As Byte ptr
Declare Function read_nibble( d As Long) As Byte 
Declare Function read_nibble_crc( d As Long) As Byte 
Declare Sub write_nibble(d As Long , c As Byte) 
Declare Function read_io(d As Long) As Byte 
Declare Sub write_io(d As Long , c As Byte) 
Declare Sub config() 
Declare Sub unconfig() 
Declare Sub reset_() 
Declare Sub c_eq_id() 
Declare Sub calibrate_timer() 

Declare Function Npack(a As Byte Ptr , s As Integer) As Long 
Declare Sub Nunpack(a As Byte Ptr , b As Long , s As Integer ) 
Declare Sub Nread(a As Byte Ptr , b As Long , s As Integer ) 
Declare Sub NCread(a As Byte Ptr , b As Long , s As Integer ) 
Declare Sub Nwrite(a As Byte Ptr , b As Long , s As Integer ) 
Declare Sub Ncopy(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nxchg(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Ninc(a As Byte Ptr , s As Integer ) 
Declare Sub Ndec(a As Byte Ptr , s As Integer ) 
Declare Sub Nadd(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nsub(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nrsub(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nand(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nor(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Nzero(a As Byte Ptr , s As Integer ) 
Declare Sub Nnot(a As Byte Ptr , s As Integer ) 
Declare Sub Nneg(a As Byte Ptr , s As Integer ) 
Declare Sub Nsl(a As Byte Ptr , s As Integer ) 
Declare Sub Nsr(a As Byte Ptr , s As Integer ) 
Declare Sub Nbit0(a As Byte Ptr , b As Byte ) 
Declare Sub Nbit1(a As Byte Ptr , b As Byte ) 
Declare Sub Nslc(a As Byte Ptr , s As Integer ) 
Declare Sub Nsrc(a As Byte Ptr , s As Integer ) 
Declare Sub Nsrb(a As Byte Ptr , s As Integer ) 
Declare Sub Ndbl(a As Byte Ptr , s As Integer ) 
Declare Sub Tbit0(a As Byte Ptr , b As Byte ) 
Declare Sub Tbit1(a As Byte Ptr , b As Byte ) 
Declare Sub Te(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Tne(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Tz(a As Byte Ptr , s As Integer ) 
Declare Sub Tnz(a As Byte Ptr , s As Integer ) 
Declare Sub Ta(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Tae(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Tb(a As Byte Ptr , b As Byte Ptr , s As Integer ) 
Declare Sub Tbe(a As Byte Ptr , b As Byte Ptr , s As Integer ) 

' creados por mi
Declare sub NFunpack(a As Byte ptr, b As Long, f As Integer)
Declare sub NCFread(a As Byte ptr, b As Long, f As Integer)
Declare sub NFwrite(a As Byte ptr, b As Long, f As Integer)
Declare sub NFcopy(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFxchg(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFadd(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFsub(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFrsub(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFand(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub NFor(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare Sub NFinc(a As Byte Ptr, f As Integer)
Declare Sub NFdec(a As Byte Ptr, f As Integer)
Declare Sub NFzero(a As Byte Ptr, f As Integer)
Declare Sub NFnot(a As Byte Ptr, f As Integer)
Declare Sub NFneg(a As Byte Ptr, f As Integer)
Declare Sub NFsr(a As Byte Ptr, f As Integer)
Declare Sub NFsl(a As Byte Ptr, f As Integer)
Declare Sub NFsrb(a As Byte Ptr, f As Integer)
Declare Sub NFdbl(a As Byte Ptr, f As Integer)
Declare sub TFe(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub TFne(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub TFa(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub TFae(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub TFb(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare sub TFbe(a As Byte Ptr, b As Byte Ptr, f As Integer)
Declare Sub TFz(a As Byte Ptr, f As Integer)
Declare Sub TFnz(a As Byte Ptr, f As Integer)


' hardware

Declare Sub setport1(newstring As Byte Ptr) 
Declare Sub init_lcd() 
Declare Sub exit_lcd() 
Declare Sub display_redraw() 
Declare Sub display_line() 
Declare Sub display_next() 
Declare Sub display_clear() 
Declare Sub display_plot1(d As Long , m As Byte) 
Declare Sub display_plot2(d As Long , m As Byte) 
Declare Sub display_ann() 
Declare Sub init_keyboard() 
Declare Sub exit_keyboard() 
Declare Sub kbd_invert(x As Integer , y As Integer) 
Declare Sub kbd_handler(scancode As Integer , press As Integer) 
Declare Sub update_in() 
Declare Function translatekeys(tecla As String) As Integer
Declare Sub presskeys(asckey As String , codekey As Integer , down As Integer) 
